"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isNull2 = _interopRequireDefault(require("lodash/isNull"));

var _set2 = _interopRequireDefault(require("lodash/set"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("@douyinfe/semi-foundation/lib/cjs/table/constants");

var _utils = require("@douyinfe/semi-foundation/lib/cjs/table/utils");

var _tableContext = _interopRequireDefault(require("../table-context"));

var _BaseRow = _interopRequireDefault(require("./BaseRow"));

var _utils2 = require("../utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
/* eslint-disable max-len */


/**
 * Render expanded row
 */
class TableExpandedRow extends _react.PureComponent {
  render() {
    const {
      record,
      columns: propColumns = [],
      prefixCls,
      className,
      expanded,
      expandedRowRender,
      renderExpandIcon,
      index,
      store,
      components,
      style,
      virtualized,
      indentSize,
      cellWidths
    } = this.props;
    const {
      tableWidth,
      anyColumnFixed,
      getCellWidths
    } = this.context;
    const cell = expandedRowRender(record, index, expanded);
    let children = null;
    const props = {};
    let column = {};

    if ((0, _isNull2.default)(cell)) {
      return null;
    } else if ( /*#__PURE__*/(0, _react.isValidElement)(cell)) {
      children = cell;
    } else if (cell && Object.prototype.toString.call(cell) === '[object Object]') {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      const _a = cell,
            {
        children: cellChildren,
        fixed
      } = _a,
            restProps = __rest(_a, ["children", "fixed"]);

      children = cellChildren;
      column = Object.assign({}, restProps);
    }

    if ((0, _get2.default)(components, 'body.cell') !== _constants.strings.DEFAULT_COMPONENTS.body.cell) {
      if (virtualized) {
        (0, _set2.default)(props, 'style.height', '100%');
      }

      (0, _set2.default)(props, 'style.display', 'block');
      (0, _set2.default)(props, 'style.width', (0, _utils.arrayAdd)(cellWidths, 0, propColumns.length));
    } else {
      // Remove the row where the scroll bar is located
      props.colSpan = (0, _utils.filterColumns)(propColumns).length;
    }

    const columns = [Object.assign({
      render: () => ({
        props,
        children: /*#__PURE__*/_react.default.createElement("div", {
          className: (0, _classnames.default)("".concat(prefixCls, "-expand-inner")),
          style: {
            width: anyColumnFixed ? (0, _utils2.amendTableWidth)(tableWidth) : undefined
          }
        }, children)
      })
    }, column)];
    const rowCls = (0, _classnames.default)(className, "".concat(prefixCls, "-row-expand"));
    const baseRowCellWidths = getCellWidths(columns);
    return /*#__PURE__*/_react.default.createElement(_BaseRow.default, {
      style: style,
      components: components,
      className: rowCls,
      expandedRow: true,
      renderExpandIcon: renderExpandIcon,
      rowKey: "".concat(record.key, "-expanded-row"),
      columns: columns,
      store: store,
      virtualized: virtualized,
      indentSize: indentSize,
      cellWidths: baseRowCellWidths
    });
  }

}

exports.default = TableExpandedRow;
TableExpandedRow.contextType = _tableContext.default;
TableExpandedRow.propTypes = {
  cellWidths: _propTypes.default.array.isRequired,
  className: _propTypes.default.string,
  columns: _propTypes.default.array,
  components: _propTypes.default.object,
  defaultExpandAllRows: _propTypes.default.bool,
  defaultExpandedRowKeys: _propTypes.default.array,
  expandIcon: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.node, _propTypes.default.func]),
  expandRowByClick: _propTypes.default.bool,
  expanded: _propTypes.default.bool,
  expandedRowKeys: _propTypes.default.array,
  expandedRowRender: _propTypes.default.func,
  indentSize: _propTypes.default.number,
  index: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  onExpand: _propTypes.default.func,
  onExpandedRowsChange: _propTypes.default.func,
  prefixCls: _propTypes.default.string,
  record: _propTypes.default.object,
  renderExpandIcon: _propTypes.default.func,
  store: _propTypes.default.object,
  style: _propTypes.default.object,
  virtualized: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.object])
};
TableExpandedRow.defaultProps = {
  record: {},
  prefixCls: _constants.cssClasses.PREFIX
};