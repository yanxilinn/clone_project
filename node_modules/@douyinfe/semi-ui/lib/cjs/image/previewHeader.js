"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _semiIcons = require("@douyinfe/semi-icons");

var _constants = require("@douyinfe/semi-foundation/lib/cjs/image/constants");

var _classnames = _interopRequireDefault(require("classnames"));

var _previewContext = require("./previewContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const prefixCls = "".concat(_constants.cssClasses.PREFIX, "-preview-header");

const Header = _ref => {
  let {
    onClose,
    titleStyle,
    className,
    renderHeader
  } = _ref;
  return /*#__PURE__*/React.createElement(_previewContext.PreviewContext.Consumer, null, _ref2 => {
    let {
      currentIndex,
      titles
    } = _ref2;
    let title;

    if (titles && typeof currentIndex === "number") {
      title = titles[currentIndex];
    }

    return /*#__PURE__*/React.createElement("section", {
      className: (0, _classnames.default)(prefixCls, className)
    }, /*#__PURE__*/React.createElement("section", {
      className: "".concat(prefixCls, "-title"),
      style: titleStyle
    }, renderHeader ? renderHeader(title) : title), /*#__PURE__*/React.createElement("section", {
      className: "".concat(prefixCls, "-close"),
      onMouseUp: onClose
    }, /*#__PURE__*/React.createElement(_semiIcons.IconClose, null)));
  });
};

var _default = Header;
exports.default = _default;