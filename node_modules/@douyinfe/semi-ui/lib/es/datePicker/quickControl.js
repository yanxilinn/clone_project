/* eslint-disable jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events */
import React, { PureComponent } from 'react';
import classNames from 'classnames';
import PropTypes from 'prop-types';
import { cssClasses, strings } from '@douyinfe/semi-foundation/lib/es/datePicker/constants';
import Button from '../button/index';
import Typography from '../typography/index';
import { noop } from '@douyinfe/semi-foundation/lib/es/utils/function';
const prefixCls = cssClasses.PREFIX;
const {
  Text
} = Typography;

class QuickControl extends PureComponent {
  render() {
    const {
      presets,
      onPresetClick,
      type,
      presetPosition,
      insetInput
    } = this.props;
    const isTypeRange = type === 'dateRange' || type === 'dateTimeRange';
    const isPanelTopAndBottom = presetPosition === 'top' || presetPosition === 'bottom';
    const isMonth = type === 'month';
    const isTopAndBottomRange = isPanelTopAndBottom && isTypeRange;
    const isTopAndBottomMonth = isPanelTopAndBottom && isMonth;
    const wrapperCls = classNames("".concat(prefixCls, "-quick-control"), {
      ["".concat(prefixCls, "-quick-control-").concat(type)]: type,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition)]: true
    });
    const headerCls = classNames({
      ["".concat(prefixCls, "-quick-control-header")]: true
    });
    const contentWrapperCls = classNames({
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-content-wrapper")]: true
    });
    const contentCls = classNames({
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-content")]: !isTopAndBottomRange && !isTopAndBottomMonth,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-range-content")]: isTopAndBottomRange,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-month-content")]: isTopAndBottomMonth
    });
    const itemCls = classNames({
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-content-item")]: !isTopAndBottomRange && !isTopAndBottomMonth,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-range-content-item")]: isTopAndBottomRange,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-month-content-item")]: isTopAndBottomMonth
    });
    const ellipsisCls = classNames({
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-content-item-ellipsis")]: !isTopAndBottomRange && !isTopAndBottomMonth,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-range-content-item-ellipsis")]: isTopAndBottomRange,
      ["".concat(prefixCls, "-quick-control-").concat(presetPosition, "-month-content-item-ellipsis")]: isTopAndBottomMonth
    });

    if (!presets.length) {
      return null;
    }

    return /*#__PURE__*/React.createElement("div", {
      className: wrapperCls,
      "x-insetinput": insetInput ? "true" : "false"
    }, !isPanelTopAndBottom && /*#__PURE__*/React.createElement("div", {
      className: headerCls
    }, "\u5FEB\u6377\u9009\u62E9"), /*#__PURE__*/React.createElement("div", {
      className: contentWrapperCls
    }, /*#__PURE__*/React.createElement("div", {
      className: contentCls
    }, presets.map((item, index) => {
      const _item = typeof item === 'function' ? item() : item;

      return /*#__PURE__*/React.createElement(Button, {
        size: "small",
        type: "primary",
        onClick: e => onPresetClick(_item, e),
        key: index
      }, /*#__PURE__*/React.createElement("div", {
        className: itemCls
      }, /*#__PURE__*/React.createElement(Text, {
        ellipsis: {
          showTooltip: true
        },
        className: ellipsisCls
      }, _item.text)));
    }))));
  }

}

QuickControl.propTypes = {
  presets: PropTypes.array,
  presetPosition: PropTypes.oneOf(strings.PRESET_POSITION_SET),
  onPresetClick: PropTypes.func,
  type: PropTypes.string,
  insetInput: PropTypes.bool
};
QuickControl.defaultProps = {
  presets: [],
  presetPosition: 'bottom',
  onPresetClick: noop
};
export default QuickControl;