"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("../base/foundation"));

var _isPromise = _interopRequireDefault(require("../utils/isPromise"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable @typescript-eslint/no-empty-function */
class PopConfirmFoundation extends _foundation.default {
  init() {}

  destroy() {}

  handleCancel(e) {
    const maybePromise = this._adapter.notifyCancel(e);

    if ((0, _isPromise.default)(maybePromise)) {
      this._adapter.updateCancelLoading(true);

      maybePromise.then(result => {
        this.handleVisibleChange(false);

        this._adapter.updateCancelLoading(false);
      }, errors => {
        this._adapter.updateCancelLoading(false);
      });
    } else {
      this.handleVisibleChange(false);
    }
  }

  handleConfirm(e) {
    const maybePromise = this._adapter.notifyConfirm(e);

    if ((0, _isPromise.default)(maybePromise)) {
      this._adapter.updateConfirmLoading(true);

      maybePromise.then(result => {
        this._adapter.updateConfirmLoading(false);

        this.handleVisibleChange(false);
      }, errors => {
        this._adapter.updateConfirmLoading(false);
      });
    } else {
      this.handleVisibleChange(false);
    }
  }

  handleClickOutSide(e) {
    this._adapter.notifyClickOutSide(e);
  }

  handleVisibleChange(visible) {
    if (!this._isControlledComponent('visible')) {
      this._adapter.setVisible(visible);
    }

    this._adapter.notifyVisibleChange(visible);
  }

}

exports.default = PopConfirmFoundation;